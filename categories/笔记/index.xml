<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>笔记 on 幸存者IMxcz.Com</title>
    <link>https://imxcz.com/categories/%E7%AC%94%E8%AE%B0/</link>
    <description>Recent content in 笔记 on 幸存者IMxcz.Com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 22 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://imxcz.com/categories/%E7%AC%94%E8%AE%B0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Golang 监听文件变化(非轮询)</title>
      <link>https://imxcz.com/post/2021/golang-jiantingwenjian/</link>
      <pubDate>Mon, 22 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://imxcz.com/post/2021/golang-jiantingwenjian/</guid>
      <description>Golang 监听文件变化(非轮询) 最近研究openresty(nginx+lua)，由于这货热更有点麻烦，所以就写就用golang写了一个文件监听的程序，监听到配置文件或lua文件更改就重启</description>
    </item>
    
    <item>
      <title>hugo markdown文章新窗口打开超链接</title>
      <link>https://imxcz.com/post/2021/hugo-markdown-target/</link>
      <pubDate>Mon, 22 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://imxcz.com/post/2021/hugo-markdown-target/</guid>
      <description>一、通过js修改链接a标签 target &amp;lt;script type=&amp;#34;text/javascript&amp;#34;&amp;gt; function addaTarget(id) { var aTags = document.getElementById(id).getElementsByTagName(&amp;#34;a&amp;#34;); for (i = 0; i &amp;lt; aTags.length; i++) { var aTags_item = aTags[i]; aTags_item.target = &amp;#34;_blank&amp;#34;; } } addaTarget(&amp;#34;post-content-id&amp;#34;); &amp;lt;/script&amp;gt; 二、通过Hugo Markdown Render Hooks 可在超链接添加title标签 [Text](https://www.gohugo.io &amp;quot;Title&amp;quot;) 增加下面模板文件 layouts/_default/_markup/render-link.html &amp;lt;a href=&amp;#34;{{ .Destination | safeURL }}&amp;#34;{{ with .Title}} title=&amp;#34;{{ . }}&amp;#34;{{</description>
    </item>
    
    <item>
      <title>Golang操作笔记</title>
      <link>https://imxcz.com/post/2019/golang-caozuo-biji/</link>
      <pubDate>Wed, 20 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imxcz.com/post/2019/golang-caozuo-biji/</guid>
      <description>Golang 判断字符串中是否包含其他某字符 import ( &amp;#34;fmt&amp;#34; &amp;#34;strings&amp;#34; ) func main() { fmt.Println(strings.Contains(&amp;#34;widuu&amp;#34;, &amp;#34;wi&amp;#34;)) //true fmt.Println(strings.Contains(&amp;#34;wi&amp;#34;, &amp;#34;widuu&amp;#34;)) //false } Golang 判断字符串中是否包含 chars 中的任何一个字符 func main() { b := strings.ContainsAny(&amp;#34;Hello,世界!</description>
    </item>
    
    <item>
      <title>Golang正则查找与替换</title>
      <link>https://imxcz.com/post/2019/golang-zhengze-find-replace/</link>
      <pubDate>Wed, 20 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imxcz.com/post/2019/golang-zhengze-find-replace/</guid>
      <description>Golang正则查找与替换 package main; import ( &amp;#34;regexp&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;strings&amp;#34; ) func main() { //1、过正则来判断字符串是否匹配 if ok, _ := regexp.Match(&amp;#34;^[0-9a-zA-Z_]+$&amp;#34;, []byte(&amp;#34;hello&amp;#34;)); ok { fmt.Println(&amp;#34;ok&amp;#34;); } //上面的例子也可以通过MatchString实现 if ok, _ := regexp.MatchString(&amp;#34;^[0-9a-zA-Z_]+$&amp;#34;, &amp;#34;hello&amp;#34;); ok { fmt.Println(&amp;#34;ok&amp;#34;); } //2、</description>
    </item>
    
    <item>
      <title>Git 代理设置</title>
      <link>https://imxcz.com/post/2018/git-proxy-setting/</link>
      <pubDate>Mon, 02 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://imxcz.com/post/2018/git-proxy-setting/</guid>
      <description>本地开启代理后，GIt也需要设置代理，才能正常通过代理网络 设置如下（可复制）： git config --global http.proxy http://127.0.0.1:1087 git config --global https.proxy https://127.0.0.1:1080 git config --global http.proxy &amp;#39;socks5://127.0.0.1:1080&amp;#39; git config --global https.proxy &amp;#39;socks5://127.0.0.1:1080&amp;#39; 取消 git config --global --unset http.proxy git config --global --unset https.proxy</description>
    </item>
    
  </channel>
</rss>
